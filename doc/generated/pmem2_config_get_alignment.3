.\" Automatically generated by Pandoc 2.5
.\"
.TH "PMEM2_CONFIG_GET_ALIGNMENT" "3" "2020-01-15" "PMDK - pmem2 API version 1.0" "PMDK Programmer's Manual"
.hy
.\" Copyright 2019, Intel Corporation
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\"     * Redistributions of source code must retain the above copyright
.\"       notice, this list of conditions and the following disclaimer.
.\"
.\"     * Redistributions in binary form must reproduce the above copyright
.\"       notice, this list of conditions and the following disclaimer in
.\"       the documentation and/or other materials provided with the
.\"       distribution.
.\"
.\"     * Neither the name of the copyright holder nor the names of its
.\"       contributors may be used to endorse or promote products derived
.\"       from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
.\" "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
.\" LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
.\" A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
.\" OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
.\" SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
.\" LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
.\" OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.SH NAME
.PP
\f[B]pmem2_config_get_alignment\f[R]() \- query an alignment
.SH SYNOPSIS
.IP
.nf
\f[C]
#include <libpmem2.h>

struct pmem2_config;
int pmem2_config_get_alignment(const struct pmem2_config *config, size_t *alignment);
\f[R]
.fi
.SH DESCRIPTION
.PP
The \f[B]pmem2_config_get_alignment\f[R]() function retrieves the
alignment of offset and length needed for \f[B]pmem2_map\f[R](3) to
succeed.
The alignment is stored in \f[I]*alignment\f[R].
.SH RETURN VALUE
.PP
The \f[B]pmem2_config_get_alignment\f[R]() function returns 0 on
success.
If the function fails, the \f[I]*alignment\f[R] variable is left
unmodified, and one of the following errors is returned:
.PP
On all systems:
.IP \[bu] 2
\f[B]PMEM2_E_FILE_HANDLE_NOT_SET\f[R] \- config doesn\[cq]t contain the
file handle (see \f[B]pmem2_config_set_fd\f[R](3),
\f[B]pmem2_config_set_handle\f[R](3)).
.IP \[bu] 2
\f[B]PMEM2_E_INVALID_ALIGNMENT_VALUE\f[R] \- operating system returned
unexpected alignment value (eg.
it is not a power of two).
.PP
on Linux and FreeBSD:
.IP \[bu] 2
\f[B]PMEM2_E_INVALID_FILE_HANDLE\f[R] \- config contains an invalid file
handle.
.PP
on Linux:
.IP \[bu] 2
\f[B]PMEM2_E_INVALID_FILE_TYPE\f[R] \- file descriptor points to a
directory, block device, pipe, or socket.
.IP \[bu] 2
\f[B]PMEM2_E_INVALID_FILE_TYPE\f[R] \- file descriptor points to a
character device other than Device DAX.
.IP \[bu] 2
\f[B]PMEM2_E_INVALID_ALIGNMENT_FORMAT\f[R] \- kernel query for Device
DAX alignment returned data in invalid format.
.IP \[bu] 2
\-\f[B]errno\f[R] set by failing \f[B]fstat\f[R](2), while trying to
validate the file descriptor.
.IP \[bu] 2
\-\f[B]errno\f[R] set by failing \f[B]realpath\f[R](3), while trying to
determine whether fd points to a Device DAX.
.IP \[bu] 2
\-\f[B]errno\f[R] set by failing \f[B]read\f[R](2), while trying to
determine Device DAX\[cq]s alignment.
.IP \[bu] 2
\-\f[B]errno\f[R] set by failing \f[B]strtoull\f[R](3), while trying to
determine Device DAX\[cq]s alignment.
.PP
On FreeBSD:
.IP \[bu] 2
\f[B]PMEM2_E_INVALID_FILE_TYPE\f[R] \- file descriptor points to a
directory, block device, pipe, socket, or character device.
.IP \[bu] 2
\-\f[B]errno\f[R] set by failing \f[B]fstat\f[R](2), while trying to
validate the file descriptor.
.SH SEE ALSO
.PP
\f[B]errno\f[R](3), \f[B]fstat\f[R](2), \f[B]realpath\f[R](3),
\f[B]read\f[R](2), \f[B]strtoull\f[R](3), \f[B]pmem2_config_new\f[R](3),
\f[B]pmem2_config_set_handle\f[R](3), \f[B]pmem2_config_set_fd\f[R](3),
\f[B]libpmem2\f[R](7) and \f[B]<http://pmem.io>\f[R]
